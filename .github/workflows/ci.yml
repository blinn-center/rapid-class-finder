on: [push]

name: CI

jobs:
  cargo:
    name: Cargo Build & Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.63"
          components: clippy
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}
          args: --all-features --frozen --offline
      - name: Audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --frozen --offline
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --frozen --offline
  build-docker:
    name: Build Docker image
    runs-on: ubuntu-22.04
    concurrency:
      group: "docker_${{ github.event_name == 'pull_request' && format('pr_{0}', github.event.number) || format('ref_{0}', github.ref) }}"
      cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.63"
      - uses: actions-rs/install@v0.1
        with:
          crate: nixpacks
          version: latest
      - run: nixpacks build . -o nixpacks
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2.0.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - uses: docker/metadata-action@v4
        id: docker_metadata
        with:
          images: |
            ghcr.io/blinn-center/rapid-class-finder
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.description=A deployable image for the Rapid Class Finder engine
      - uses: docker/build-push-action@v3
        with:
          context: nixpacks
          # Sadly qemu is too slow to be productive, this would be good to revisit when there are native arm64 workers
          # though
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
